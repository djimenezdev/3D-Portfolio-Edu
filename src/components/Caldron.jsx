/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from "react";
import { useGLTF, useTexture } from "@react-three/drei";

export function Caldron(props) {
  const { nodes, materials } = useGLTF("/models/caldronTest.glb");
  const textures = useTexture({
    bakedTexture: "/textures/baked_AO.png",
    mainTexture: "/textures/caldron.png",
  });

  useEffect(() => {
    materials["Material.001"].map = textures.mainTexture;
    materials["Material.001"].aoMap = textures.bakedTexture;
    materials["Material.001"].aoMapIntensity = 0.7;
  }, []);
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Caldron.geometry}
        material={materials["Material.001"]}
        scale={100}
      />
    </group>
  );
}

useGLTF.preload("/models/caldronTest.glb");

/* 
const textures = useTexture({
    bakedTexture: "/textures/baked_AO.png",
    mainTexture: "/textures/caldron.png",
  });

  useEffect(() => {
    materials["Material.001"].map = textures.mainTexture;
    materials["Material.001"].aoMap = textures.bakedTexture;
    materials["Material.001"].aoMapIntensity = 1;
  }, []);

*/
