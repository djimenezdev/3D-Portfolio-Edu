/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from "react";
import { useCursor, useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { damp, damp3 } from "maath/easing";
import * as THREE from "three";

export function Pause(props) {
  const { nodes, materials } = useGLTF("/models/pause.glb");
  const pauseRef = useRef();

  const [hovered, setHovered] = useState(false);
  useCursor(hovered);

  materials["PauseBar.001"].toneMapped = false;
  materials["PauseBar"].toneMapped = false;
  materials["PauseBar.001"].emissive = new THREE.Color("#00ff00");
  materials["PauseBar"].emissive = new THREE.Color("#00ff00");
  useFrame((_state, delta) => {
    damp(
      materials["PauseBar.001"],
      "emissiveIntensity",
      hovered ? 20 : 2,
      0.1,
      delta * 0.5
    );
    damp(
      materials["PauseBar"],
      "emissiveIntensity",
      hovered ? 20 : 2,
      0.1,
      delta * 0.5
    );
    damp3(
      pauseRef.current.position,
      props.playing ? [-0.07, 0, 0.5] : [-0.07, 0, 0.4],
      0.1,
      delta * 0.3
    );
  });
  return (
    <group
      ref={pauseRef}
      {...props}
      dispose={null}
      onPointerEnter={(event) => {
        event.stopPropagation();
        !hovered && setHovered(true);
      }}
      onPointerLeave={(event) => {
        event.stopPropagation();
        setHovered(false);
      }}
      onClick={(event) => {
        event.stopPropagation();
        props.soundRef.current.playing()
          ? props.soundRef.current.pause()
          : null;
        props.playing ? props.setPlaying(false) : null;
      }}
    >
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane.geometry}
        material={materials["PauseBar.001"]}
        position={[0.186, 0, 0]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[0.3, 1, 0.5]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane001.geometry}
        material={materials.PauseBar}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[0.3, 1, 0.5]}
      />
    </group>
  );
}

useGLTF.preload("/models/pause.glb");
