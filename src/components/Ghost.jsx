/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

export function Ghost(props) {
  const { nodes, materials } = useGLTF("/models/ghost.glb");
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.ghost.geometry}
        material={materials.ghost}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder001.geometry}
        material={materials.hat_yellow}
        position={[0, 0.776, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.hat.geometry}
        material={materials.hat}
        position={[0, 0.897, 0]}
        scale={[1, 0.319, 1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane.geometry}
        material={materials.hat_yellow}
        position={[0, 0.904, 0.568]}
        rotation={[1.35, 0, 0]}
        scale={0.192}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Sphere.geometry}
        material={materials.eyes}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Sphere_1.geometry}
        material={materials.eyes_light}
      />
    </group>
  );
}

useGLTF.preload("/models/ghost.glb");
